---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: traefik
  namespace: traefik
spec:
  releaseName: traefik
  chart:
    spec:
      chart: traefik
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: traefik
      version: 20.3.0
  interval: 1h0m0s
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
  values:
    additionalArguments:
    #  - "--providers.kubernetesingress.ingressclass=traefik-internal"
    - "--serverstransport.insecureskipverify=true"
    - "--providers.kubernetesingress.ingressendpoint.publishedservice=traefik/traefik"
    - "--log.level=DEBUG"
    pilot:
      enabled: true
      dashboard: true
    ingressRoute:
      dashboard:
        enabled: true
        domain: traefik.int.larshaugan.net
        # Custom match rule with host domain
        matchRule: Host(`traefik.int.larshaugan.net`)
        entryPoints: ["websecure"]
        # Add custom middlewares : authentication and redirection
        middlewares:
          - name: traefik-dashboard-redirect
          - name: traefik-dashboard-auth
    
    # Create the custom middlewares used by the IngressRoute dashboard (can also be created in another way).
    extraObjects:
      - apiVersion: traefik.containo.us/v1alpha1
        kind: Middleware
        metadata:
          name: traefik-dashboard-auth
        spec:
          basicAuth:
            secret: traefik-dashboard-auth-secret
    
      - apiVersion: traefik.containo.us/v1alpha1
        kind: Middleware
        metadata:
          name: traefik-dashboard-redirect
        spec:
          redirectRegex:
            permanent: true
            regex: ^(https?:\/\/(\[[\w:.]+\]|[\w\._-]+)(:\d+)?)\/$
            replacement: ${1}/dashboard/

      - apiVersion: traefik.containo.us/v1alpha1
        kind: Middleware
        metadata:
          name: redirectscheme
        spec:
          redirectScheme:
            scheme: https
            permanent: true

#    experimental:
#      kubernetesGateway:
#        enabled: true
    logs:
      general:
        # By default, the logs use a text format (common), but you can
        # also ask for the json format in the format option
        # format: json
        # By default, the level is set to ERROR. Alternative logging levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
        level: DEBUG
      access:
        # To enable access logs
        enabled: true
